/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.doris.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2024-05-20")
public class TMetadataTableRequestParams implements org.apache.thrift.TBase<TMetadataTableRequestParams, TMetadataTableRequestParams._Fields>, java.io.Serializable, Cloneable, Comparable<TMetadataTableRequestParams> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TMetadataTableRequestParams");

  private static final org.apache.thrift.protocol.TField METADATA_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("metadata_type", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ICEBERG_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("iceberg_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField BACKENDS_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("backends_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField COLUMNS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("columns_name", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField FRONTENDS_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("frontends_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField CURRENT_USER_IDENT_FIELD_DESC = new org.apache.thrift.protocol.TField("current_user_ident", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField QUERIES_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("queries_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField MATERIALIZED_VIEWS_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("materialized_views_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField JOBS_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("jobs_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField TASKS_METADATA_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("tasks_metadata_params", org.apache.thrift.protocol.TType.STRUCT, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TMetadataTableRequestParamsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TMetadataTableRequestParamsTupleSchemeFactory();

  /**
   * 
   * @see org.apache.doris.thrift.TMetadataType
   */
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TMetadataType metadata_type; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TIcebergMetadataParams iceberg_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TBackendsMetadataParams backends_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> columns_name; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TFrontendsMetadataParams frontends_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TUserIdentity current_user_ident; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TQueriesMetadataParams queries_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TMaterializedViewsMetadataParams materialized_views_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TJobsMetadataParams jobs_metadata_params; // optional
  public @org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TTasksMetadataParams tasks_metadata_params; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see org.apache.doris.thrift.TMetadataType
     */
    METADATA_TYPE((short)1, "metadata_type"),
    ICEBERG_METADATA_PARAMS((short)2, "iceberg_metadata_params"),
    BACKENDS_METADATA_PARAMS((short)3, "backends_metadata_params"),
    COLUMNS_NAME((short)4, "columns_name"),
    FRONTENDS_METADATA_PARAMS((short)5, "frontends_metadata_params"),
    CURRENT_USER_IDENT((short)6, "current_user_ident"),
    QUERIES_METADATA_PARAMS((short)7, "queries_metadata_params"),
    MATERIALIZED_VIEWS_METADATA_PARAMS((short)8, "materialized_views_metadata_params"),
    JOBS_METADATA_PARAMS((short)9, "jobs_metadata_params"),
    TASKS_METADATA_PARAMS((short)10, "tasks_metadata_params");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // METADATA_TYPE
          return METADATA_TYPE;
        case 2: // ICEBERG_METADATA_PARAMS
          return ICEBERG_METADATA_PARAMS;
        case 3: // BACKENDS_METADATA_PARAMS
          return BACKENDS_METADATA_PARAMS;
        case 4: // COLUMNS_NAME
          return COLUMNS_NAME;
        case 5: // FRONTENDS_METADATA_PARAMS
          return FRONTENDS_METADATA_PARAMS;
        case 6: // CURRENT_USER_IDENT
          return CURRENT_USER_IDENT;
        case 7: // QUERIES_METADATA_PARAMS
          return QUERIES_METADATA_PARAMS;
        case 8: // MATERIALIZED_VIEWS_METADATA_PARAMS
          return MATERIALIZED_VIEWS_METADATA_PARAMS;
        case 9: // JOBS_METADATA_PARAMS
          return JOBS_METADATA_PARAMS;
        case 10: // TASKS_METADATA_PARAMS
          return TASKS_METADATA_PARAMS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.METADATA_TYPE,_Fields.ICEBERG_METADATA_PARAMS,_Fields.BACKENDS_METADATA_PARAMS,_Fields.COLUMNS_NAME,_Fields.FRONTENDS_METADATA_PARAMS,_Fields.CURRENT_USER_IDENT,_Fields.QUERIES_METADATA_PARAMS,_Fields.MATERIALIZED_VIEWS_METADATA_PARAMS,_Fields.JOBS_METADATA_PARAMS,_Fields.TASKS_METADATA_PARAMS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.METADATA_TYPE, new org.apache.thrift.meta_data.FieldMetaData("metadata_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, org.apache.doris.thrift.TMetadataType.class)));
    tmpMap.put(_Fields.ICEBERG_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("iceberg_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TIcebergMetadataParams.class)));
    tmpMap.put(_Fields.BACKENDS_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("backends_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TBackendsMetadataParams.class)));
    tmpMap.put(_Fields.COLUMNS_NAME, new org.apache.thrift.meta_data.FieldMetaData("columns_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FRONTENDS_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("frontends_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TFrontendsMetadataParams.class)));
    tmpMap.put(_Fields.CURRENT_USER_IDENT, new org.apache.thrift.meta_data.FieldMetaData("current_user_ident", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TUserIdentity.class)));
    tmpMap.put(_Fields.QUERIES_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("queries_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TQueriesMetadataParams.class)));
    tmpMap.put(_Fields.MATERIALIZED_VIEWS_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("materialized_views_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TMaterializedViewsMetadataParams.class)));
    tmpMap.put(_Fields.JOBS_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("jobs_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TJobsMetadataParams.class)));
    tmpMap.put(_Fields.TASKS_METADATA_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("tasks_metadata_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.apache.doris.thrift.TTasksMetadataParams.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TMetadataTableRequestParams.class, metaDataMap);
  }

  public TMetadataTableRequestParams() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TMetadataTableRequestParams(TMetadataTableRequestParams other) {
    if (other.isSetMetadataType()) {
      this.metadata_type = other.metadata_type;
    }
    if (other.isSetIcebergMetadataParams()) {
      this.iceberg_metadata_params = new org.apache.doris.thrift.TIcebergMetadataParams(other.iceberg_metadata_params);
    }
    if (other.isSetBackendsMetadataParams()) {
      this.backends_metadata_params = new org.apache.doris.thrift.TBackendsMetadataParams(other.backends_metadata_params);
    }
    if (other.isSetColumnsName()) {
      java.util.List<java.lang.String> __this__columns_name = new java.util.ArrayList<java.lang.String>(other.columns_name);
      this.columns_name = __this__columns_name;
    }
    if (other.isSetFrontendsMetadataParams()) {
      this.frontends_metadata_params = new org.apache.doris.thrift.TFrontendsMetadataParams(other.frontends_metadata_params);
    }
    if (other.isSetCurrentUserIdent()) {
      this.current_user_ident = new org.apache.doris.thrift.TUserIdentity(other.current_user_ident);
    }
    if (other.isSetQueriesMetadataParams()) {
      this.queries_metadata_params = new org.apache.doris.thrift.TQueriesMetadataParams(other.queries_metadata_params);
    }
    if (other.isSetMaterializedViewsMetadataParams()) {
      this.materialized_views_metadata_params = new org.apache.doris.thrift.TMaterializedViewsMetadataParams(other.materialized_views_metadata_params);
    }
    if (other.isSetJobsMetadataParams()) {
      this.jobs_metadata_params = new org.apache.doris.thrift.TJobsMetadataParams(other.jobs_metadata_params);
    }
    if (other.isSetTasksMetadataParams()) {
      this.tasks_metadata_params = new org.apache.doris.thrift.TTasksMetadataParams(other.tasks_metadata_params);
    }
  }

  public TMetadataTableRequestParams deepCopy() {
    return new TMetadataTableRequestParams(this);
  }

  @Override
  public void clear() {
    this.metadata_type = null;
    this.iceberg_metadata_params = null;
    this.backends_metadata_params = null;
    this.columns_name = null;
    this.frontends_metadata_params = null;
    this.current_user_ident = null;
    this.queries_metadata_params = null;
    this.materialized_views_metadata_params = null;
    this.jobs_metadata_params = null;
    this.tasks_metadata_params = null;
  }

  /**
   * 
   * @see org.apache.doris.thrift.TMetadataType
   */
  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TMetadataType getMetadataType() {
    return this.metadata_type;
  }

  /**
   * 
   * @see org.apache.doris.thrift.TMetadataType
   */
  public TMetadataTableRequestParams setMetadataType(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TMetadataType metadata_type) {
    this.metadata_type = metadata_type;
    return this;
  }

  public void unsetMetadataType() {
    this.metadata_type = null;
  }

  /** Returns true if field metadata_type is set (has been assigned a value) and false otherwise */
  public boolean isSetMetadataType() {
    return this.metadata_type != null;
  }

  public void setMetadataTypeIsSet(boolean value) {
    if (!value) {
      this.metadata_type = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TIcebergMetadataParams getIcebergMetadataParams() {
    return this.iceberg_metadata_params;
  }

  public TMetadataTableRequestParams setIcebergMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TIcebergMetadataParams iceberg_metadata_params) {
    this.iceberg_metadata_params = iceberg_metadata_params;
    return this;
  }

  public void unsetIcebergMetadataParams() {
    this.iceberg_metadata_params = null;
  }

  /** Returns true if field iceberg_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetIcebergMetadataParams() {
    return this.iceberg_metadata_params != null;
  }

  public void setIcebergMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.iceberg_metadata_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TBackendsMetadataParams getBackendsMetadataParams() {
    return this.backends_metadata_params;
  }

  public TMetadataTableRequestParams setBackendsMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TBackendsMetadataParams backends_metadata_params) {
    this.backends_metadata_params = backends_metadata_params;
    return this;
  }

  public void unsetBackendsMetadataParams() {
    this.backends_metadata_params = null;
  }

  /** Returns true if field backends_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetBackendsMetadataParams() {
    return this.backends_metadata_params != null;
  }

  public void setBackendsMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.backends_metadata_params = null;
    }
  }

  public int getColumnsNameSize() {
    return (this.columns_name == null) ? 0 : this.columns_name.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.String> getColumnsNameIterator() {
    return (this.columns_name == null) ? null : this.columns_name.iterator();
  }

  public void addToColumnsName(java.lang.String elem) {
    if (this.columns_name == null) {
      this.columns_name = new java.util.ArrayList<java.lang.String>();
    }
    this.columns_name.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.String> getColumnsName() {
    return this.columns_name;
  }

  public TMetadataTableRequestParams setColumnsName(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> columns_name) {
    this.columns_name = columns_name;
    return this;
  }

  public void unsetColumnsName() {
    this.columns_name = null;
  }

  /** Returns true if field columns_name is set (has been assigned a value) and false otherwise */
  public boolean isSetColumnsName() {
    return this.columns_name != null;
  }

  public void setColumnsNameIsSet(boolean value) {
    if (!value) {
      this.columns_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TFrontendsMetadataParams getFrontendsMetadataParams() {
    return this.frontends_metadata_params;
  }

  public TMetadataTableRequestParams setFrontendsMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TFrontendsMetadataParams frontends_metadata_params) {
    this.frontends_metadata_params = frontends_metadata_params;
    return this;
  }

  public void unsetFrontendsMetadataParams() {
    this.frontends_metadata_params = null;
  }

  /** Returns true if field frontends_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetFrontendsMetadataParams() {
    return this.frontends_metadata_params != null;
  }

  public void setFrontendsMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.frontends_metadata_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TUserIdentity getCurrentUserIdent() {
    return this.current_user_ident;
  }

  public TMetadataTableRequestParams setCurrentUserIdent(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TUserIdentity current_user_ident) {
    this.current_user_ident = current_user_ident;
    return this;
  }

  public void unsetCurrentUserIdent() {
    this.current_user_ident = null;
  }

  /** Returns true if field current_user_ident is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentUserIdent() {
    return this.current_user_ident != null;
  }

  public void setCurrentUserIdentIsSet(boolean value) {
    if (!value) {
      this.current_user_ident = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TQueriesMetadataParams getQueriesMetadataParams() {
    return this.queries_metadata_params;
  }

  public TMetadataTableRequestParams setQueriesMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TQueriesMetadataParams queries_metadata_params) {
    this.queries_metadata_params = queries_metadata_params;
    return this;
  }

  public void unsetQueriesMetadataParams() {
    this.queries_metadata_params = null;
  }

  /** Returns true if field queries_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetQueriesMetadataParams() {
    return this.queries_metadata_params != null;
  }

  public void setQueriesMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.queries_metadata_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TMaterializedViewsMetadataParams getMaterializedViewsMetadataParams() {
    return this.materialized_views_metadata_params;
  }

  public TMetadataTableRequestParams setMaterializedViewsMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TMaterializedViewsMetadataParams materialized_views_metadata_params) {
    this.materialized_views_metadata_params = materialized_views_metadata_params;
    return this;
  }

  public void unsetMaterializedViewsMetadataParams() {
    this.materialized_views_metadata_params = null;
  }

  /** Returns true if field materialized_views_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetMaterializedViewsMetadataParams() {
    return this.materialized_views_metadata_params != null;
  }

  public void setMaterializedViewsMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.materialized_views_metadata_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TJobsMetadataParams getJobsMetadataParams() {
    return this.jobs_metadata_params;
  }

  public TMetadataTableRequestParams setJobsMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TJobsMetadataParams jobs_metadata_params) {
    this.jobs_metadata_params = jobs_metadata_params;
    return this;
  }

  public void unsetJobsMetadataParams() {
    this.jobs_metadata_params = null;
  }

  /** Returns true if field jobs_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetJobsMetadataParams() {
    return this.jobs_metadata_params != null;
  }

  public void setJobsMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.jobs_metadata_params = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public org.apache.doris.thrift.TTasksMetadataParams getTasksMetadataParams() {
    return this.tasks_metadata_params;
  }

  public TMetadataTableRequestParams setTasksMetadataParams(@org.apache.thrift.annotation.Nullable org.apache.doris.thrift.TTasksMetadataParams tasks_metadata_params) {
    this.tasks_metadata_params = tasks_metadata_params;
    return this;
  }

  public void unsetTasksMetadataParams() {
    this.tasks_metadata_params = null;
  }

  /** Returns true if field tasks_metadata_params is set (has been assigned a value) and false otherwise */
  public boolean isSetTasksMetadataParams() {
    return this.tasks_metadata_params != null;
  }

  public void setTasksMetadataParamsIsSet(boolean value) {
    if (!value) {
      this.tasks_metadata_params = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case METADATA_TYPE:
      if (value == null) {
        unsetMetadataType();
      } else {
        setMetadataType((org.apache.doris.thrift.TMetadataType)value);
      }
      break;

    case ICEBERG_METADATA_PARAMS:
      if (value == null) {
        unsetIcebergMetadataParams();
      } else {
        setIcebergMetadataParams((org.apache.doris.thrift.TIcebergMetadataParams)value);
      }
      break;

    case BACKENDS_METADATA_PARAMS:
      if (value == null) {
        unsetBackendsMetadataParams();
      } else {
        setBackendsMetadataParams((org.apache.doris.thrift.TBackendsMetadataParams)value);
      }
      break;

    case COLUMNS_NAME:
      if (value == null) {
        unsetColumnsName();
      } else {
        setColumnsName((java.util.List<java.lang.String>)value);
      }
      break;

    case FRONTENDS_METADATA_PARAMS:
      if (value == null) {
        unsetFrontendsMetadataParams();
      } else {
        setFrontendsMetadataParams((org.apache.doris.thrift.TFrontendsMetadataParams)value);
      }
      break;

    case CURRENT_USER_IDENT:
      if (value == null) {
        unsetCurrentUserIdent();
      } else {
        setCurrentUserIdent((org.apache.doris.thrift.TUserIdentity)value);
      }
      break;

    case QUERIES_METADATA_PARAMS:
      if (value == null) {
        unsetQueriesMetadataParams();
      } else {
        setQueriesMetadataParams((org.apache.doris.thrift.TQueriesMetadataParams)value);
      }
      break;

    case MATERIALIZED_VIEWS_METADATA_PARAMS:
      if (value == null) {
        unsetMaterializedViewsMetadataParams();
      } else {
        setMaterializedViewsMetadataParams((org.apache.doris.thrift.TMaterializedViewsMetadataParams)value);
      }
      break;

    case JOBS_METADATA_PARAMS:
      if (value == null) {
        unsetJobsMetadataParams();
      } else {
        setJobsMetadataParams((org.apache.doris.thrift.TJobsMetadataParams)value);
      }
      break;

    case TASKS_METADATA_PARAMS:
      if (value == null) {
        unsetTasksMetadataParams();
      } else {
        setTasksMetadataParams((org.apache.doris.thrift.TTasksMetadataParams)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case METADATA_TYPE:
      return getMetadataType();

    case ICEBERG_METADATA_PARAMS:
      return getIcebergMetadataParams();

    case BACKENDS_METADATA_PARAMS:
      return getBackendsMetadataParams();

    case COLUMNS_NAME:
      return getColumnsName();

    case FRONTENDS_METADATA_PARAMS:
      return getFrontendsMetadataParams();

    case CURRENT_USER_IDENT:
      return getCurrentUserIdent();

    case QUERIES_METADATA_PARAMS:
      return getQueriesMetadataParams();

    case MATERIALIZED_VIEWS_METADATA_PARAMS:
      return getMaterializedViewsMetadataParams();

    case JOBS_METADATA_PARAMS:
      return getJobsMetadataParams();

    case TASKS_METADATA_PARAMS:
      return getTasksMetadataParams();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case METADATA_TYPE:
      return isSetMetadataType();
    case ICEBERG_METADATA_PARAMS:
      return isSetIcebergMetadataParams();
    case BACKENDS_METADATA_PARAMS:
      return isSetBackendsMetadataParams();
    case COLUMNS_NAME:
      return isSetColumnsName();
    case FRONTENDS_METADATA_PARAMS:
      return isSetFrontendsMetadataParams();
    case CURRENT_USER_IDENT:
      return isSetCurrentUserIdent();
    case QUERIES_METADATA_PARAMS:
      return isSetQueriesMetadataParams();
    case MATERIALIZED_VIEWS_METADATA_PARAMS:
      return isSetMaterializedViewsMetadataParams();
    case JOBS_METADATA_PARAMS:
      return isSetJobsMetadataParams();
    case TASKS_METADATA_PARAMS:
      return isSetTasksMetadataParams();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TMetadataTableRequestParams)
      return this.equals((TMetadataTableRequestParams)that);
    return false;
  }

  public boolean equals(TMetadataTableRequestParams that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_metadata_type = true && this.isSetMetadataType();
    boolean that_present_metadata_type = true && that.isSetMetadataType();
    if (this_present_metadata_type || that_present_metadata_type) {
      if (!(this_present_metadata_type && that_present_metadata_type))
        return false;
      if (!this.metadata_type.equals(that.metadata_type))
        return false;
    }

    boolean this_present_iceberg_metadata_params = true && this.isSetIcebergMetadataParams();
    boolean that_present_iceberg_metadata_params = true && that.isSetIcebergMetadataParams();
    if (this_present_iceberg_metadata_params || that_present_iceberg_metadata_params) {
      if (!(this_present_iceberg_metadata_params && that_present_iceberg_metadata_params))
        return false;
      if (!this.iceberg_metadata_params.equals(that.iceberg_metadata_params))
        return false;
    }

    boolean this_present_backends_metadata_params = true && this.isSetBackendsMetadataParams();
    boolean that_present_backends_metadata_params = true && that.isSetBackendsMetadataParams();
    if (this_present_backends_metadata_params || that_present_backends_metadata_params) {
      if (!(this_present_backends_metadata_params && that_present_backends_metadata_params))
        return false;
      if (!this.backends_metadata_params.equals(that.backends_metadata_params))
        return false;
    }

    boolean this_present_columns_name = true && this.isSetColumnsName();
    boolean that_present_columns_name = true && that.isSetColumnsName();
    if (this_present_columns_name || that_present_columns_name) {
      if (!(this_present_columns_name && that_present_columns_name))
        return false;
      if (!this.columns_name.equals(that.columns_name))
        return false;
    }

    boolean this_present_frontends_metadata_params = true && this.isSetFrontendsMetadataParams();
    boolean that_present_frontends_metadata_params = true && that.isSetFrontendsMetadataParams();
    if (this_present_frontends_metadata_params || that_present_frontends_metadata_params) {
      if (!(this_present_frontends_metadata_params && that_present_frontends_metadata_params))
        return false;
      if (!this.frontends_metadata_params.equals(that.frontends_metadata_params))
        return false;
    }

    boolean this_present_current_user_ident = true && this.isSetCurrentUserIdent();
    boolean that_present_current_user_ident = true && that.isSetCurrentUserIdent();
    if (this_present_current_user_ident || that_present_current_user_ident) {
      if (!(this_present_current_user_ident && that_present_current_user_ident))
        return false;
      if (!this.current_user_ident.equals(that.current_user_ident))
        return false;
    }

    boolean this_present_queries_metadata_params = true && this.isSetQueriesMetadataParams();
    boolean that_present_queries_metadata_params = true && that.isSetQueriesMetadataParams();
    if (this_present_queries_metadata_params || that_present_queries_metadata_params) {
      if (!(this_present_queries_metadata_params && that_present_queries_metadata_params))
        return false;
      if (!this.queries_metadata_params.equals(that.queries_metadata_params))
        return false;
    }

    boolean this_present_materialized_views_metadata_params = true && this.isSetMaterializedViewsMetadataParams();
    boolean that_present_materialized_views_metadata_params = true && that.isSetMaterializedViewsMetadataParams();
    if (this_present_materialized_views_metadata_params || that_present_materialized_views_metadata_params) {
      if (!(this_present_materialized_views_metadata_params && that_present_materialized_views_metadata_params))
        return false;
      if (!this.materialized_views_metadata_params.equals(that.materialized_views_metadata_params))
        return false;
    }

    boolean this_present_jobs_metadata_params = true && this.isSetJobsMetadataParams();
    boolean that_present_jobs_metadata_params = true && that.isSetJobsMetadataParams();
    if (this_present_jobs_metadata_params || that_present_jobs_metadata_params) {
      if (!(this_present_jobs_metadata_params && that_present_jobs_metadata_params))
        return false;
      if (!this.jobs_metadata_params.equals(that.jobs_metadata_params))
        return false;
    }

    boolean this_present_tasks_metadata_params = true && this.isSetTasksMetadataParams();
    boolean that_present_tasks_metadata_params = true && that.isSetTasksMetadataParams();
    if (this_present_tasks_metadata_params || that_present_tasks_metadata_params) {
      if (!(this_present_tasks_metadata_params && that_present_tasks_metadata_params))
        return false;
      if (!this.tasks_metadata_params.equals(that.tasks_metadata_params))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMetadataType()) ? 131071 : 524287);
    if (isSetMetadataType())
      hashCode = hashCode * 8191 + metadata_type.getValue();

    hashCode = hashCode * 8191 + ((isSetIcebergMetadataParams()) ? 131071 : 524287);
    if (isSetIcebergMetadataParams())
      hashCode = hashCode * 8191 + iceberg_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetBackendsMetadataParams()) ? 131071 : 524287);
    if (isSetBackendsMetadataParams())
      hashCode = hashCode * 8191 + backends_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetColumnsName()) ? 131071 : 524287);
    if (isSetColumnsName())
      hashCode = hashCode * 8191 + columns_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetFrontendsMetadataParams()) ? 131071 : 524287);
    if (isSetFrontendsMetadataParams())
      hashCode = hashCode * 8191 + frontends_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetCurrentUserIdent()) ? 131071 : 524287);
    if (isSetCurrentUserIdent())
      hashCode = hashCode * 8191 + current_user_ident.hashCode();

    hashCode = hashCode * 8191 + ((isSetQueriesMetadataParams()) ? 131071 : 524287);
    if (isSetQueriesMetadataParams())
      hashCode = hashCode * 8191 + queries_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetMaterializedViewsMetadataParams()) ? 131071 : 524287);
    if (isSetMaterializedViewsMetadataParams())
      hashCode = hashCode * 8191 + materialized_views_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobsMetadataParams()) ? 131071 : 524287);
    if (isSetJobsMetadataParams())
      hashCode = hashCode * 8191 + jobs_metadata_params.hashCode();

    hashCode = hashCode * 8191 + ((isSetTasksMetadataParams()) ? 131071 : 524287);
    if (isSetTasksMetadataParams())
      hashCode = hashCode * 8191 + tasks_metadata_params.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TMetadataTableRequestParams other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetMetadataType(), other.isSetMetadataType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMetadataType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.metadata_type, other.metadata_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIcebergMetadataParams(), other.isSetIcebergMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIcebergMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.iceberg_metadata_params, other.iceberg_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBackendsMetadataParams(), other.isSetBackendsMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBackendsMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.backends_metadata_params, other.backends_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetColumnsName(), other.isSetColumnsName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColumnsName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.columns_name, other.columns_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFrontendsMetadataParams(), other.isSetFrontendsMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFrontendsMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.frontends_metadata_params, other.frontends_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCurrentUserIdent(), other.isSetCurrentUserIdent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentUserIdent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.current_user_ident, other.current_user_ident);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueriesMetadataParams(), other.isSetQueriesMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueriesMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queries_metadata_params, other.queries_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMaterializedViewsMetadataParams(), other.isSetMaterializedViewsMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaterializedViewsMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.materialized_views_metadata_params, other.materialized_views_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetJobsMetadataParams(), other.isSetJobsMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobsMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobs_metadata_params, other.jobs_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTasksMetadataParams(), other.isSetTasksMetadataParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTasksMetadataParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tasks_metadata_params, other.tasks_metadata_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TMetadataTableRequestParams(");
    boolean first = true;

    if (isSetMetadataType()) {
      sb.append("metadata_type:");
      if (this.metadata_type == null) {
        sb.append("null");
      } else {
        sb.append(this.metadata_type);
      }
      first = false;
    }
    if (isSetIcebergMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("iceberg_metadata_params:");
      if (this.iceberg_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.iceberg_metadata_params);
      }
      first = false;
    }
    if (isSetBackendsMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("backends_metadata_params:");
      if (this.backends_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.backends_metadata_params);
      }
      first = false;
    }
    if (isSetColumnsName()) {
      if (!first) sb.append(", ");
      sb.append("columns_name:");
      if (this.columns_name == null) {
        sb.append("null");
      } else {
        sb.append(this.columns_name);
      }
      first = false;
    }
    if (isSetFrontendsMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("frontends_metadata_params:");
      if (this.frontends_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.frontends_metadata_params);
      }
      first = false;
    }
    if (isSetCurrentUserIdent()) {
      if (!first) sb.append(", ");
      sb.append("current_user_ident:");
      if (this.current_user_ident == null) {
        sb.append("null");
      } else {
        sb.append(this.current_user_ident);
      }
      first = false;
    }
    if (isSetQueriesMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("queries_metadata_params:");
      if (this.queries_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.queries_metadata_params);
      }
      first = false;
    }
    if (isSetMaterializedViewsMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("materialized_views_metadata_params:");
      if (this.materialized_views_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.materialized_views_metadata_params);
      }
      first = false;
    }
    if (isSetJobsMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("jobs_metadata_params:");
      if (this.jobs_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.jobs_metadata_params);
      }
      first = false;
    }
    if (isSetTasksMetadataParams()) {
      if (!first) sb.append(", ");
      sb.append("tasks_metadata_params:");
      if (this.tasks_metadata_params == null) {
        sb.append("null");
      } else {
        sb.append(this.tasks_metadata_params);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (iceberg_metadata_params != null) {
      iceberg_metadata_params.validate();
    }
    if (backends_metadata_params != null) {
      backends_metadata_params.validate();
    }
    if (frontends_metadata_params != null) {
      frontends_metadata_params.validate();
    }
    if (current_user_ident != null) {
      current_user_ident.validate();
    }
    if (queries_metadata_params != null) {
      queries_metadata_params.validate();
    }
    if (materialized_views_metadata_params != null) {
      materialized_views_metadata_params.validate();
    }
    if (jobs_metadata_params != null) {
      jobs_metadata_params.validate();
    }
    if (tasks_metadata_params != null) {
      tasks_metadata_params.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TMetadataTableRequestParamsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TMetadataTableRequestParamsStandardScheme getScheme() {
      return new TMetadataTableRequestParamsStandardScheme();
    }
  }

  private static class TMetadataTableRequestParamsStandardScheme extends org.apache.thrift.scheme.StandardScheme<TMetadataTableRequestParams> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TMetadataTableRequestParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // METADATA_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.metadata_type = org.apache.doris.thrift.TMetadataType.findByValue(iprot.readI32());
              struct.setMetadataTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ICEBERG_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.iceberg_metadata_params = new org.apache.doris.thrift.TIcebergMetadataParams();
              struct.iceberg_metadata_params.read(iprot);
              struct.setIcebergMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BACKENDS_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.backends_metadata_params = new org.apache.doris.thrift.TBackendsMetadataParams();
              struct.backends_metadata_params.read(iprot);
              struct.setBackendsMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COLUMNS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list392 = iprot.readListBegin();
                struct.columns_name = new java.util.ArrayList<java.lang.String>(_list392.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _elem393;
                for (int _i394 = 0; _i394 < _list392.size; ++_i394)
                {
                  _elem393 = iprot.readString();
                  struct.columns_name.add(_elem393);
                }
                iprot.readListEnd();
              }
              struct.setColumnsNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FRONTENDS_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.frontends_metadata_params = new org.apache.doris.thrift.TFrontendsMetadataParams();
              struct.frontends_metadata_params.read(iprot);
              struct.setFrontendsMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CURRENT_USER_IDENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.current_user_ident = new org.apache.doris.thrift.TUserIdentity();
              struct.current_user_ident.read(iprot);
              struct.setCurrentUserIdentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // QUERIES_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.queries_metadata_params = new org.apache.doris.thrift.TQueriesMetadataParams();
              struct.queries_metadata_params.read(iprot);
              struct.setQueriesMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MATERIALIZED_VIEWS_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.materialized_views_metadata_params = new org.apache.doris.thrift.TMaterializedViewsMetadataParams();
              struct.materialized_views_metadata_params.read(iprot);
              struct.setMaterializedViewsMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JOBS_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.jobs_metadata_params = new org.apache.doris.thrift.TJobsMetadataParams();
              struct.jobs_metadata_params.read(iprot);
              struct.setJobsMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TASKS_METADATA_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.tasks_metadata_params = new org.apache.doris.thrift.TTasksMetadataParams();
              struct.tasks_metadata_params.read(iprot);
              struct.setTasksMetadataParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TMetadataTableRequestParams struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.metadata_type != null) {
        if (struct.isSetMetadataType()) {
          oprot.writeFieldBegin(METADATA_TYPE_FIELD_DESC);
          oprot.writeI32(struct.metadata_type.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.iceberg_metadata_params != null) {
        if (struct.isSetIcebergMetadataParams()) {
          oprot.writeFieldBegin(ICEBERG_METADATA_PARAMS_FIELD_DESC);
          struct.iceberg_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.backends_metadata_params != null) {
        if (struct.isSetBackendsMetadataParams()) {
          oprot.writeFieldBegin(BACKENDS_METADATA_PARAMS_FIELD_DESC);
          struct.backends_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.columns_name != null) {
        if (struct.isSetColumnsName()) {
          oprot.writeFieldBegin(COLUMNS_NAME_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.columns_name.size()));
            for (java.lang.String _iter395 : struct.columns_name)
            {
              oprot.writeString(_iter395);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.frontends_metadata_params != null) {
        if (struct.isSetFrontendsMetadataParams()) {
          oprot.writeFieldBegin(FRONTENDS_METADATA_PARAMS_FIELD_DESC);
          struct.frontends_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.current_user_ident != null) {
        if (struct.isSetCurrentUserIdent()) {
          oprot.writeFieldBegin(CURRENT_USER_IDENT_FIELD_DESC);
          struct.current_user_ident.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.queries_metadata_params != null) {
        if (struct.isSetQueriesMetadataParams()) {
          oprot.writeFieldBegin(QUERIES_METADATA_PARAMS_FIELD_DESC);
          struct.queries_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.materialized_views_metadata_params != null) {
        if (struct.isSetMaterializedViewsMetadataParams()) {
          oprot.writeFieldBegin(MATERIALIZED_VIEWS_METADATA_PARAMS_FIELD_DESC);
          struct.materialized_views_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jobs_metadata_params != null) {
        if (struct.isSetJobsMetadataParams()) {
          oprot.writeFieldBegin(JOBS_METADATA_PARAMS_FIELD_DESC);
          struct.jobs_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tasks_metadata_params != null) {
        if (struct.isSetTasksMetadataParams()) {
          oprot.writeFieldBegin(TASKS_METADATA_PARAMS_FIELD_DESC);
          struct.tasks_metadata_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TMetadataTableRequestParamsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TMetadataTableRequestParamsTupleScheme getScheme() {
      return new TMetadataTableRequestParamsTupleScheme();
    }
  }

  private static class TMetadataTableRequestParamsTupleScheme extends org.apache.thrift.scheme.TupleScheme<TMetadataTableRequestParams> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TMetadataTableRequestParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMetadataType()) {
        optionals.set(0);
      }
      if (struct.isSetIcebergMetadataParams()) {
        optionals.set(1);
      }
      if (struct.isSetBackendsMetadataParams()) {
        optionals.set(2);
      }
      if (struct.isSetColumnsName()) {
        optionals.set(3);
      }
      if (struct.isSetFrontendsMetadataParams()) {
        optionals.set(4);
      }
      if (struct.isSetCurrentUserIdent()) {
        optionals.set(5);
      }
      if (struct.isSetQueriesMetadataParams()) {
        optionals.set(6);
      }
      if (struct.isSetMaterializedViewsMetadataParams()) {
        optionals.set(7);
      }
      if (struct.isSetJobsMetadataParams()) {
        optionals.set(8);
      }
      if (struct.isSetTasksMetadataParams()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetMetadataType()) {
        oprot.writeI32(struct.metadata_type.getValue());
      }
      if (struct.isSetIcebergMetadataParams()) {
        struct.iceberg_metadata_params.write(oprot);
      }
      if (struct.isSetBackendsMetadataParams()) {
        struct.backends_metadata_params.write(oprot);
      }
      if (struct.isSetColumnsName()) {
        {
          oprot.writeI32(struct.columns_name.size());
          for (java.lang.String _iter396 : struct.columns_name)
          {
            oprot.writeString(_iter396);
          }
        }
      }
      if (struct.isSetFrontendsMetadataParams()) {
        struct.frontends_metadata_params.write(oprot);
      }
      if (struct.isSetCurrentUserIdent()) {
        struct.current_user_ident.write(oprot);
      }
      if (struct.isSetQueriesMetadataParams()) {
        struct.queries_metadata_params.write(oprot);
      }
      if (struct.isSetMaterializedViewsMetadataParams()) {
        struct.materialized_views_metadata_params.write(oprot);
      }
      if (struct.isSetJobsMetadataParams()) {
        struct.jobs_metadata_params.write(oprot);
      }
      if (struct.isSetTasksMetadataParams()) {
        struct.tasks_metadata_params.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TMetadataTableRequestParams struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.metadata_type = org.apache.doris.thrift.TMetadataType.findByValue(iprot.readI32());
        struct.setMetadataTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.iceberg_metadata_params = new org.apache.doris.thrift.TIcebergMetadataParams();
        struct.iceberg_metadata_params.read(iprot);
        struct.setIcebergMetadataParamsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.backends_metadata_params = new org.apache.doris.thrift.TBackendsMetadataParams();
        struct.backends_metadata_params.read(iprot);
        struct.setBackendsMetadataParamsIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list397 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
          struct.columns_name = new java.util.ArrayList<java.lang.String>(_list397.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _elem398;
          for (int _i399 = 0; _i399 < _list397.size; ++_i399)
          {
            _elem398 = iprot.readString();
            struct.columns_name.add(_elem398);
          }
        }
        struct.setColumnsNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.frontends_metadata_params = new org.apache.doris.thrift.TFrontendsMetadataParams();
        struct.frontends_metadata_params.read(iprot);
        struct.setFrontendsMetadataParamsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.current_user_ident = new org.apache.doris.thrift.TUserIdentity();
        struct.current_user_ident.read(iprot);
        struct.setCurrentUserIdentIsSet(true);
      }
      if (incoming.get(6)) {
        struct.queries_metadata_params = new org.apache.doris.thrift.TQueriesMetadataParams();
        struct.queries_metadata_params.read(iprot);
        struct.setQueriesMetadataParamsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.materialized_views_metadata_params = new org.apache.doris.thrift.TMaterializedViewsMetadataParams();
        struct.materialized_views_metadata_params.read(iprot);
        struct.setMaterializedViewsMetadataParamsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.jobs_metadata_params = new org.apache.doris.thrift.TJobsMetadataParams();
        struct.jobs_metadata_params.read(iprot);
        struct.setJobsMetadataParamsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.tasks_metadata_params = new org.apache.doris.thrift.TTasksMetadataParams();
        struct.tasks_metadata_params.read(iprot);
        struct.setTasksMetadataParamsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

